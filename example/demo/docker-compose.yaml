version: "2"
services:
  # To eventually offload to Tempo...
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo-local.yaml:/etc/tempo.yaml
      - ./overrides.yaml:/etc/overrides.yaml
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "55680:55680"  # otlp grpc
      - "55681"  # otlp http
      - "9411"   # zipkin
  loki:
    image: grafana/loki:2.4.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.40.0
    command: [ "--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"    # OTLP gRPC receiver
      - "55670:55679" # zpages extension
      - "24224:24224" # fluentforwarder
      - "24224:24224/udp" # fluentforwarder
    depends_on:
      - tempo

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
    ports:
      - "3000:3000"

#  # Log generator
#  flog:
#    image: mingrammer/flog:0.4.3
#    # Output 1 log per second in JSON format
#    command: ["--format=json", "--loop", "--delay=1s", "--number=1"]
#    depends_on:
#      - otel-collector
#    logging:
#      driver: fluentd
#      options:
#        # Allow time for otel-collector to spin up, then forward fluentd logs to the fluentforwarder receiver.
#        fluentd-async-connect: "true"
#        # Use nanosecond precision
#        fluentd-sub-second-precision: "true"


